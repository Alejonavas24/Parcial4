colores <- c("#3498db", "#e74c3c")
plot_ly(labels = nombres_porcentajes, values = porcentajes, type = "pie",
textinfo = "label+percent", text = datosproblema$Var1 , marker = list(colors = colores)) %>%
layout(title = list(font="Porcentajes de Estado del credito"),
showlegend = FALSE,  # Ocultar la leyenda
margin = list(l = 20, r = 0, b = 0, t = 30),  # Ajustar márgenes
paper_bgcolor = "white",  # Fondo blanco
plot_bgcolor = "white",  # Fondo blanco
font = list(family = "Arial", size = 14),  # Fuente y tamaño de texto
titlefont = list(size = 18),  # Tamaño del título
annotations = list(text = "Fuente: Datos de ejemplo", showarrow = FALSE,
x = 0.8, y = -0.15))  # Nota de fuente
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
valores= datosproblema$Freq
nombres_porcentajes=c("Mujer","Hombre")
porcentajes <- (valores / sum(valores)) * 100
colores <- c("#3498db", "#e74c3c")
plot_ly(labels = nombres_porcentajes, values = porcentajes, type = "pie",
textinfo = "label+percent", text = datosproblema$Var1 , marker = list(colors = colores)) %>%
layout(title = list(font="Porcentajes de Estado del credito"),
showlegend = FALSE,  # Ocultar la leyenda
margin = list(l = 20, r = 0, b = 0, t = 30),  # Ajustar márgenes
paper_bgcolor = "white",  # Fondo blanco
plot_bgcolor = "white",  # Fondo blanco
font = list(family = "Arial", size = 14),  # Fuente y tamaño de texto
titlefont = list(size = 18),  # Tamaño del título
annotations = list(text = "Fuente: Datos de ejemplo", showarrow = FALSE,
x = 0.8, y = -0.15))  # Nota de fuente
#primero leemos el excel y lo guardamos en un data frame en este caso :
Blackfriday=data.frame(read_xlsx("C:/Users/alejo/Desktop/Blackfriday.xlsx"))
var.test(c(sdcompraspromM,sdcompraspromF))
z3B <- ((PromMMuestra-PromMuestraF))/(sqrt(((sdPromMuestraM*sdPromMuestraM)/120)+((sdPromMuestraF*sdPromMuestraF)/120)))
muestraP3 <- subset(Blackfriday,select=c(Gender,Purchase))
#tamaño de la muestrs 120
n=120
#se extraen los datos de la población femenina
PoblacionF <- subset(muestraP3,Gender=="F")
muestraF <- sample(PoblacionF$Purchase,size=n,replace=FALSE,prob=NULL)
comprasPromF <- mean(PoblacionF$Purchase)
PromMuestraF <- mean(muestraF)
sdcompraspromF <- sd(PoblacionF$Purchase)
sdPromMuestraF <- sd(muestraF)
#se extraen los datos de la población masculina
PoblacionM <- subset(muestraP3,Gender=="M")
muestraM <- sample(PoblacionM$Purchase,size=n,replace=FALSE,prob=NULL)
ComprasPromM <- mean(PoblacionM$Purchase)
PromMMuestra <- mean(muestraM)
sdcompraspromM <- sd(PoblacionM$Purchase)
sdPromMuestraM <- sd(muestraM)
cat("La muestra femenina es:",muestraF)
#cat("La población femenina es:",PoblacionF$Purchase)
cat("\nEl promedio de la población femenina es:",comprasPromF)
cat("\nEl promedio de la muestra femenina es:",PromMuestraF)
cat("\nLa desviación estandar de la población femenina es:",sdcompraspromF)
cat("\nLa desviación estandar de la muestra femenina es:",sdPromMuestraF)
cat("La muestra masculina es:",muestraM)
#cat("La población femenina es:",PoblacionF$Purchase)
cat("\nEl promedio de la población masculina es:",ComprasPromM)
cat("\nEl promedio de la muestra masculina es:",PromMMuestra)
cat("\nLa desviación estandar de la población masculina es:",sdcompraspromM)
cat("\nLa desviación estandar de la muestra masculina es:",sdPromMuestraM)
z3B <- ((PromMMuestra-PromMuestraF))/(sqrt(((sdPromMuestraM*sdPromMuestraM)/120)+((sdPromMuestraF*sdPromMuestraF)/120)))
z3B
pnorm(z3B)
var.test(c(sdcompraspromM,sdcompraspromF))
if (!require('devtools')) install.packages('devtools')
devtools::install_github('fhernanb/stests', force=TRUE)
var.test(c(sdcompraspromM,sdcompraspromF))
install.packages("devtools")
install.packages("devtools")
set.seed(27811)
library(dplyr,warn.conflicts = FALSE)
library(modeest,warn.conflicts = FALSE)
library(descr, warn.conflicts = FALSE)
library(ggplot2, warn.conflicts = FALSE)
library(kableExtra, warn.conflicts = FALSE)
library(moments, warn.conflicts =  FALSE)
library(plotrix, warn.conflicts =  FALSE)
library(readxl, warn.conflicts =  FALSE)
library(plotly, warn.conflicts = FALSE)
library(tseries, warn.conflicts = FALSE)
library(cowplot, warn.conflicts = FALSE)
library(devtools, warn.conflicts = FALSE)
if (!require('devtools')) install.packages('devtools')
devtools::install_github('fhernanb/stests', force=TRUE)
var.test(c(sdcompraspromM,sdcompraspromF))
var.test(c(sdcompraspromM,sdcompraspromF))
if (!require('devtools')) install.packages('devtools')
devtools::install_github('fhernanb/stests', force=TRUE)
if (!require('devtools')) install.packages('devtools')
devtools::install_github('fhernanb/stests', force=TRUE)
stests::var.test(c(sdcompraspromM,sdcompraspromF))
set.seed(27811)
library(dplyr,warn.conflicts = FALSE)
library(modeest,warn.conflicts = FALSE)
library(descr, warn.conflicts = FALSE)
library(ggplot2, warn.conflicts = FALSE)
library(kableExtra, warn.conflicts = FALSE)
library(moments, warn.conflicts =  FALSE)
library(plotrix, warn.conflicts =  FALSE)
library(readxl, warn.conflicts =  FALSE)
library(plotly, warn.conflicts = FALSE)
library(tseries, warn.conflicts = FALSE)
library(cowplot, warn.conflicts = FALSE)
library(devtools, warn.conflicts = FALSE)
cat("La muestra masculina es:",muestraM)
muestraP3 <- subset(Blackfriday,select=c(Gender,Purchase))
#tamaño de la muestrs 120
n=120
#se extraen los datos de la población femenina
PoblacionF <- subset(muestraP3,Gender=="F")
muestraF <- sample(PoblacionF$Purchase,size=n,replace=FALSE,prob=NULL)
comprasPromF <- mean(PoblacionF$Purchase)
PromMuestraF <- mean(muestraF)
sdcompraspromF <- sd(PoblacionF$Purchase)
sdPromMuestraF <- sd(muestraF)
#se extraen los datos de la población masculina
PoblacionM <- subset(muestraP3,Gender=="M")
muestraM <- sample(PoblacionM$Purchase,size=n,replace=FALSE,prob=NULL)
ComprasPromM <- mean(PoblacionM$Purchase)
PromMMuestra <- mean(muestraM)
sdcompraspromM <- sd(PoblacionM$Purchase)
sdPromMuestraM <- sd(muestraM)
#poblacion
media_poblacion
datosproblema=datosfinales$Purchase
Mediana_Datos=round(median(datosproblema),0)
Moda=mfv(datosproblema)
Promedio=round(mean(datosproblema),0)
sdi=round(sd(datosproblema),0)
#hist(datosproblema)
g1 = ggplot(data = data.frame(datosproblema),mapping = aes(x = datosproblema)) +
geom_histogram(bins = 20,colour="white",fill="#FFBCFD")+
labs(title = "Histograma variable PurchaseS", y ="Cantidad") +
#geom_vline(aes(xintercept= Promedio ,color ="MEDIA"),linetype = "dashed",linewidth = 1) +
#(aes(xintercept= Media_Datos,color = "MEDIANA"),linetype = "dashed",linewidth = 1) +
#scale_color_manual(name = "Informacion",values = c(MEDIANA ="#5DFF00" ,MEDIA = "#6E00FF")) +
stat_function(fun = dnorm, n = 10000, args = list(mean = Promedio, sd = sdi)) + ylab("") +
scale_y_continuous(breaks = NULL)
g1
media_poblacion=mean(Blackfriday$Purchase)
cat("La media de la poblacion es:",media_poblacion)
desviacion_Estandar_poblacion=sd(Blackfriday$Purchase)
cat("La desviacion estandar de la poblacion es:",desviacion_Estandar_poblacion)
datosproblema=datosfinales$Income
Media_Datos=median(datosproblema)
Moda=mfv(datosproblema)
Promedio=mean(datosproblema)
#hist(datosproblema)
g1 = ggplot(data = data.frame(datosproblema),mapping = aes(x = datosproblema)) +
geom_histogram(bins = 20,colour="white",fill="#FFEA89")+
labs(title = "Histograma income", y ="Cantidad") +
geom_vline(aes(xintercept= Promedio ,color ="MEDIA"),linetype = "dashed",linewidth = 0.5) +
geom_vline(aes(xintercept= Media_Datos,color = "MEDIANA"),linetype = "dashed",linewidth = 1) +
scale_color_manual(name = "Informacion",values = c(MEDIANA ="blue" ,MEDIA = "red",MODA ="purple"))
g1
#boxplot(datosproblema, col="#BF89FF",xlab="Habitantes",ylab="Edad")
#stripchart(datosproblema, method = "jitter", pch = 19, add = TRUE, col = "blue")
#poblacion
media_poblacion
desviacion_Estandar_poblacion
#muestra
media_muestra
z <- round(( mean(Blackfriday$Purchase) - mean(datosfinales$Purchase))/sd(datosfinales$Purchase),2)
probabilidad <- round(pnorm(q=z,mean = 0, sd=1,lower.tail = FALSE),1)
cat("la probabilidad de que la variable media muestral sea mayor o igual que el valor de la
poblacional es de :",(probabilidad*100),"%")
media_poblacion=mean(Blackfriday$Purchase)
cat("La media de la poblacion es:",media_poblacion)
desviacion_Estandar_poblacion=sd(Blackfriday$Purchase)
cat("La desviacion estandar de la poblacion es:",desviacion_Estandar_poblacion)
media_muestra=mean(datosfinales$Purchase)
cat("La media de la muestra  es:",media_muestra)
desviacion_Estandar_muestra=sd(datosfinales$Purchase)
cat("La desviacion estandar de la muestra es:",desviacion_Estandar_muestra)
z <- round(( mean(Blackfriday$Purchase) - mean(datosfinales$Purchase))/sd(datosfinales$Purchase),2)
probabilidad <- round(pnorm(q=z,mean = 0, sd=1,lower.tail = FALSE),1)
cat("la probabilidad de que la variable media muestral sea mayor o igual que el valor de la
poblacional es de :",(probabilidad*100),"%")
datosproblema=datosfinales$Purchase
Mediana_Datos=round(median(datosproblema),0)
Moda=mfv(datosproblema)
Promedio=round(mean(datosproblema),0)
sdi=round(sd(datosproblema),0)
#hist(datosproblema)
g1 = ggplot(data = data.frame(datosproblema),mapping = aes(x = datosproblema)) +
geom_histogram(bins = 20,colour="white",fill="#FFBCFD")+
labs(title = "Histograma variable PurchaseS", y ="Cantidad") +
#geom_vline(aes(xintercept= Promedio ,color ="MEDIA"),linetype = "dashed",linewidth = 1) +
#(aes(xintercept= Media_Datos,color = "MEDIANA"),linetype = "dashed",linewidth = 1) +
#scale_color_manual(name = "Informacion",values = c(MEDIANA ="#5DFF00" ,MEDIA = "#6E00FF")) +
stat_function(fun = dnorm, n = 10000, args = list(mean = Promedio, sd = sdi)) + ylab("") +
scale_y_continuous(breaks = NULL)
g1
curti=kurtosis(datosfinales$Purchase)
cat("la curtosis de la variable purchasae de la muestra aes: ",curti)
datosproblema=datosfinales$Purchase
asimetria=skewness(datosproblema)
cat("la asimetria da :",asimetria)
plot(datosfinales$Purchase, dnorm(datosfinales$Purchase, mean = mean(datosfinales$Purchase), sd = sd(datosfinales$Purchase)), type = "l",
ylim = c(0, 0.0001), ylab = "", lwd = 2, col = "red")
x=dnorm(datosfinales$Purchase, mean = mean(datosfinales$Purchase), sd = sd(datosfinales$Purchase))
x
#poblacion
media_poblacion
desviacion_Estandar_poblacion
#muestra
media_muestra
desviacion_Estandar_muestra
formz3A=(media_muestra-media_poblacion)/(desviacion_Estandar_muestra/sqrt(120))
pnorm(formz3A)
muestraP3 <- subset(Blackfriday,select=c(Gender,Purchase))
#tamaño de la muestrs 120
n=120
#se extraen los datos de la población femenina
PoblacionF <- subset(muestraP3,Gender=="F")
muestraF <- sample(PoblacionF$Purchase,size=n,replace=FALSE,prob=NULL)
comprasPromF <- mean(PoblacionF$Purchase)
PromMuestraF <- mean(muestraF)
sdcompraspromF <- sd(PoblacionF$Purchase)
sdPromMuestraF <- sd(muestraF)
#se extraen los datos de la población masculina
PoblacionM <- subset(muestraP3,Gender=="M")
muestraM <- sample(PoblacionM$Purchase,size=n,replace=FALSE,prob=NULL)
ComprasPromM <- mean(PoblacionM$Purchase)
PromMMuestra <- mean(muestraM)
sdcompraspromM <- sd(PoblacionM$Purchase)
sdPromMuestraM <- sd(muestraM)
cat("La muestra femenina es:",muestraF)
#cat("La población femenina es:",PoblacionF$Purchase)
cat("\nEl promedio de la población femenina es:",comprasPromF)
cat("\nEl promedio de la muestra femenina es:",PromMuestraF)
cat("\nLa desviación estandar de la población femenina es:",sdcompraspromF)
cat("\nLa desviación estandar de la muestra femenina es:",sdPromMuestraF)
cat("La muestra masculina es:",muestraM)
#cat("La población femenina es:",PoblacionF$Purchase)
cat("\nEl promedio de la población masculina es:",ComprasPromM)
cat("\nEl promedio de la muestra masculina es:",PromMMuestra)
cat("\nLa desviación estandar de la población masculina es:",sdcompraspromM)
cat("\nLa desviación estandar de la muestra masculina es:",sdPromMuestraM)
z3B <- ((PromMMuestra-PromMuestraF))/(sqrt(((sdPromMuestraM*sdPromMuestraM)/120)+((sdPromMuestraF*sdPromMuestraF)/120)))
z3B
pnorm(z3B)
if (!require('devtools')) install.packages('devtools')
devtools::install_github('fhernanb/stests', force=TRUE)
stests::var.test(c(sdcompraspromM,sdcompraspromF))
PruebaHipVarianzas <- ((sdcompraspromM*sdcompraspromM)/(sdcompraspromF*sdcompraspromF))
PruebaHipVarianzas
gradosLibertad <- 119/119
valorCritico <- 1.35
valorCritico
datosproblema=datosfinales$Income
Media_Datos=median(datosproblema)
Moda=mfv(datosproblema)
Promedio=mean(datosproblema)
#hist(datosproblema)
g1 = ggplot(data = data.frame(datosproblema),mapping = aes(x = datosproblema)) +
geom_histogram(bins = 20,colour="white",fill="#FFEA89")+
labs(title = "Histograma income", y ="Cantidad") +
geom_vline(aes(xintercept= Promedio ,color ="MEDIA"),linetype = "dashed",linewidth = 0.5) +
geom_vline(aes(xintercept= Media_Datos,color = "MEDIANA"),linetype = "dashed",linewidth = 1) +
scale_color_manual(name = "Informacion",values = c(MEDIANA ="blue" ,MEDIA = "red",MODA ="purple"))
g1
#boxplot(datosproblema, col="#BF89FF",xlab="Habitantes",ylab="Edad")
#stripchart(datosproblema, method = "jitter", pch = 19, add = TRUE, col = "blue")
cat("la media de los datos es", Media_Datos)
cat("El promedio de los datos es",Promedio)
cat("los valores que mas se repiten o la moda es:",Moda)
cat("la media de los datos es", Media_Datos)
cat("El promedio de los datos es",Promedio)
cat("los valores que mas se repiten o la moda es:",Moda)
plot(datosproblema,col="green",xlab="habitantes",ylab="antiguedad")
MediEstado=datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)}
MediEstado=datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)
MediEstado
MediEstado= datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income))
MediEstado
MediEstado= data_frame(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
MediEstado= tibble(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
MediEstado= tibble(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado)
MediEstado= data_frame(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado)
MediEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado)
MediEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado,
main="TITULO GENERAL",          #C) Título principal
xlab="Eje X",                   #D) Tíulo del eje X
ylab="Eje Y",                   #E) Título del eje Y
legend = rownames(Cuentas1))
MediEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado,
main="TITULO GENERAL",          #C) Título principal
xlab="Eje X",                   #D) Tíulo del eje X
ylab="Eje Y",                   #E) Título del eje Y
legend = rownames(MediEstado))
MediEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado,
main="TITULO GENERAL",          #C) Título principal
xlab="Comparacion entre medias ingresos",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado))
MediEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Comparacion entre medias ingresos",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado))
MediEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Comparacion entre medias ingresos",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 300)
)
MediEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Comparacion entre medias ingresos",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 30)
)
MediEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Comparacion entre medias ingresos",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 3)
)
MediEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Comparacion entre medias ingresos",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 2)
)
MediEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Comparacion entre medias ingresos",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 1)
)
MediEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Comparacion entre medias ingresos",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 2)
)
MediEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Agrupacion por generos",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 2)
)
MediEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Agrupacion por generos",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 2),
col=c("#EAFF8B","#BEFFF2")
)
MediEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Agrupacion por generos",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 1.5),
col=c("#EAFF8B","#BEFFF2")
)
MediEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Agrupacion por generos",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 1.5),
col=c("#EAFF8B","#BEFFF2")
)
MediEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Agrupacion por generos",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 1.5),
col=c("#FFBEBE","#D7BEFF")
)
MedianaEstado= table(datosfinales %>% group_by(Gender=Gender) %>% summarise(MediaAritmetica=median(Income)))
barplot(MedianaEstado,
main="Comparacion entre mediana ingresos",          #C) Título principal
xlab="Agrupacion por generos",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 1.5),
col=c("#EAFF8B","#BEFFF2")
)
MediEstado= table(datosfinales %>% group_by(City_Category=City_Category) %>% summarise(MediaAritmetica=mean(Income)))
MediEstado
MediEstado= table(datosfinales %>% group_by(City_Category=City_Category) %>% summarise(MediaAritmetica=mean(Income)))
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Agrupacion por generos",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 1.5),
col=c("#FFBEBE","#D7BEFF")
)
MediEstado= table(datosfinales %>% group_by(City_Category=City_Category) %>% summarise(MediaAritmetica=mean(Income)))
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Agrupacion por generos",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 1.5),
col=c("#FFBEBE","#FBFFAF","#AFFFC4")
)
MediEstado= table(datosfinales %>% group_by(City_Category=City_Category) %>% summarise(MediaAritmetica=mean(Income)))
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Agrupacion por categoria de ciudad",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 1.5),
col=c("#FFBEBE","#FBFFAF","#AFFFC4")
)
MedianEstado= table(datosfinales %>% group_by(City_Category=City_Category) %>% summarise(MediaAritmetica=median(Income)))
barplot(MediEstado,
main="Comparacion entre mediana ingresos",          #C) Título principal
xlab="Agrupacion por categoria de ciudad",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 1.5),
col=c("#FFBEBE","#FBFFAF","#AFFFC4")
MediEstado= table(datosfinales %>% group_by(City_Category=City_Category) %>% summarise(MediaAritmetica=mean(Income)))
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Agrupacion por categoria de ciudad",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 1.5),
col=c("#FFBEBE","#FBFFAF","#AFFFC4")
MediEstado= table(datosfinales %>% group_by(City_Category=City_Category) %>% summarise(MediaAritmetica=mean(Income)))
barplot(MediEstado,
main="Comparacion entre medias ingresos",          #C) Título principal
xlab="Agrupacion por categoria de ciudad",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MediEstado),
ylim = c(0, 1.5),
col=c("#FFBEBE","#FBFFAF","#AFFFC4")
)
MedianEstado= table(datosfinales %>% group_by(City_Category=City_Category) %>% summarise(MediaAritmetica=median(Income)))
barplot(MediEstado,
main="Comparacion entre median ingresos",          #C) Título principal
xlab="Agrupacion por categoria de ciudad",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MedianEstado),
ylim = c(0, 1.5),
col=c("#FFBEBE","#FBFFAF","#AFFFC4")
)
MedianEstado= table(datosfinales %>% group_by(City_Category=City_Category) %>% summarise(MediaAritmetica=median(Income)))
barplot(MedianEstado,
main="Comparacion entre median ingresos",          #C) Título principal
xlab="Agrupacion por categoria de ciudad",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MedianEstado),
ylim = c(0, 1.5),
col=c("#FFBEBE","#FBFFAF","#AFFFC4")
)
MedianEstado= table(datosfinales %>% group_by(City_Category=City_Category) %>% summarise(MediaAritmetica=median(Income)))
barplot(MedianEstado,
main="Comparacion entre median ingresos",          #C) Título principal
xlab="Agrupacion por categoria de ciudad",                   #D) Tíulo del eje X
ylab="",                   #E) Título del eje Y
legend = rownames(MedianEstado),
ylim = c(0, 1.5),
col=c("#7B7E4E","#4E7E59","#7E4E4E")
)
