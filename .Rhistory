library(readxl)
Blackfriday <- read_excel("C:/Users/alejo/Downloads/Blackfriday.xlsx")
View(Blackfriday)
set.seed(27811)
library(dplyr,warn.conflicts = FALSE)
library(modeest,warn.conflicts = FALSE)
library(datos, warn.conflicts = FALSE)
library(descr, warn.conflicts = FALSE)
library(ggplot2, warn.conflicts = FALSE)
library(kableExtra, warn.conflicts = FALSE)
library(moments, warn.conflicts =  FALSE)
library(plotrix)
datos=data.frame(Blackfriday)
n=120
muestra=sample(1:nrow(datos),size=n,replace=FALSE)
datosfinales=datos[muestra, ]
datosfinales
set.seed(27811)
library(dplyr,warn.conflicts = FALSE)
library(modeest,warn.conflicts = FALSE)
library(descr, warn.conflicts = FALSE)
library(ggplot2, warn.conflicts = FALSE)
library(kableExtra, warn.conflicts = FALSE)
library(moments, warn.conflicts =  FALSE)
library(plotrix)
n=120
muestra=sample(1:nrow(datos),size=n,replace=FALSE)
datos=data.frame(Blackfriday)
datosfinales=datos[muestra, ]
datosfinales
set.seed(27811)
library(dplyr,warn.conflicts = FALSE)
library(modeest,warn.conflicts = FALSE)
library(descr, warn.conflicts = FALSE)
library(ggplot2, warn.conflicts = FALSE)
library(kableExtra, warn.conflicts = FALSE)
library(moments, warn.conflicts =  FALSE)
library(plotrix)
n=120
muestra=sample(1:nrow(datos),size=n,replace=FALSE)
datos=data.frame(Blackfriday)
datosfinales=datos[muestra, ]
datosfinales
set.seed(27811)
library(dplyr,warn.conflicts = FALSE)
library(modeest,warn.conflicts = FALSE)
library(descr, warn.conflicts = FALSE)
library(ggplot2, warn.conflicts = FALSE)
library(kableExtra, warn.conflicts = FALSE)
library(moments, warn.conflicts =  FALSE)
library(plotrix)
n=120
muestra=sample(1:nrow(datos),size=n,replace=FALSE)
datos < data.frame(Blackfriday)
datosfinales < datos[muestra, ]
datosfinales
install.packages("excelR")
set.seed(27811)
library(dplyr,warn.conflicts = FALSE)
library(modeest,warn.conflicts = FALSE)
library(descr, warn.conflicts = FALSE)
library(ggplot2, warn.conflicts = FALSE)
library(kableExtra, warn.conflicts = FALSE)
library(moments, warn.conflicts =  FALSE)
library(plotrix)
n=120
Blackfriday=read_xlsx("C:\Users\alejo\Downloads\Blackfriday.xlsx")
set.seed(27811)
library(dplyr,warn.conflicts = FALSE)
library(modeest,warn.conflicts = FALSE)
library(descr, warn.conflicts = FALSE)
library(ggplot2, warn.conflicts = FALSE)
library(kableExtra, warn.conflicts = FALSE)
library(moments, warn.conflicts =  FALSE)
library(plotrix)
n=120
Blackfriday=read_xlsx("C:/Users/alejo/Downloads/Blackfriday.xlsx")
Blackfriday
datos = data.frame(Blackfriday)
muestra=sample(1:nrow(datos),size=n,replace=FALSE)
datosfinales = datos[muestra, ]
#primero leemos el excel y lo guardamos en un data frame en este caso :
Blackfriday=data.frame(read_xlsx("C:/Users/alejo/Downloads/Blackfriday.xlsx"))
#Despues establecemos el tamaño de la muestra y con ese tamaño usamos la funcion sample :
n=120
muestra=sample(1:nrow(Blackfriday),size=n,replace=FALSE)
#primero leemos el excel y lo guardamos en un data frame en este caso :
Blackfriday=data.frame(read_xlsx("C:/Users/alejo/Downloads/Blackfriday.xlsx"))
#Despues establecemos el tamaño de la muestra y con ese tamaño usamos la funcion sample :
n=120
muestra=sample(1:nrow(Blackfriday),size=n,replace=FALSE)
muestra
#primero leemos el excel y lo guardamos en un data frame en este caso :
Blackfriday=data.frame(read_xlsx("C:/Users/alejo/Downloads/Blackfriday.xlsx"))
#Despues establecemos el tamaño de la muestra y con ese tamaño usamos la funcion sample :
n=120
muestra=sample(1:nrow(Blackfriday),size=n,replace=FALSE)
#Finalmente relacionamos nuestra muestra con los datos obtenidos del excel:
datosfinales = datos[muestra, ]
datosfinales
#primero leemos el excel y lo guardamos en un data frame en este caso :
Blackfriday=data.frame(read_xlsx("C:/Users/alejo/Downloads/Blackfriday.xlsx"))
#Despues establecemos el tamaño de la muestra y con ese tamaño usamos la funcion sample :
n=120
muestra=sample(1:nrow(Blackfriday),size=n,replace=FALSE)
#Finalmente relacionamos nuestra muestra con los datos obtenidos del excel:
datosfinales = Blackfriday[muestra, ]
datosfinales
datosproblema=datosfinales$Gender
datosproblema
datosproblema=table(datosfinales$Gender)
datosproblema=table(datosfinales$Gender)
datosproblema=table(datosfinales$Gender)
datosproblema
datosproblema=table(datosfinales$Gender)
datosproblema
pie3D(datosproblema)
datosproblema=table(datosfinales$Gender)
datosproblema
ggplot(datosproblema,aes(x=d,y=,fill=))
datosproblema=table(datosfinales$Gender)
datosproblema
#ggplot(datosproblema,aes(x=d,y=,fill=))
data_frame <- data.frame(col1 = letters[1:3],
col2 = c(46,24,12))
data_frame
datosproblema=dataa.frame(table(datosfinales$Gender))
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
#ggplot(datosproblema,aes(x=d,y=,fill=))
data_frame <- data.frame(col1 = letters[1:3],
col2 = c(46,24,12))
data_frame
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
#ggplot(datosproblema,aes(x=d,y=,fill=))
ggplot(datosproblema, aes(x="", y=var1, fill=freq))
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
#ggplot(datosproblema,aes(x=d,y=,fill=))
ggplot(datosproblema, aes(x="", y=Var1, fill=freq))
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
#ggplot(datosproblema,aes(x=d,y=,fill=))
ggplot(datosproblema, aes(x="", y=Var1,))
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
#ggplot(datosproblema,aes(x=d,y=,fill=))
ggplot(datosproblema, aes(x="", y=Var1,fill=freq
))
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
valores=c(23,97)
nombres_porcentajes= c(Hombre,Mujer)
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
valores=c(23,97)
nombres_porcentajes=(Hombre,Mujer)
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
valores=c(23,97)
porcentajes <- (valores / sum(valores)) * 100
plot_ly(labels = datosproblema$Var1, values = porcentajes, type = "pie",
textinfo = "label+percent", text = nombres_porcentajes, marker = list(colors = colores)) %>%
layout(title = list(font="Porcentajes de Estado del credito"),
showlegend = FALSE,  # Ocultar la leyenda
margin = list(l = 20, r = 0, b = 0, t = 30),  # Ajustar márgenes
paper_bgcolor = "white",  # Fondo blanco
plot_bgcolor = "white",  # Fondo blanco
font = list(family = "Arial", size = 14),  # Fuente y tamaño de texto
titlefont = list(size = 18),  # Tamaño del título
annotations = list(text = "Fuente: Datos de ejemplo", showarrow = FALSE,
x = 0.8, y = -0.15))  # Nota de fuente
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
valores=c(23,97)
porcentajes <- (valores / sum(valores)) * 100
plot_ly(labels = datosproblema$Var1, values = porcentajes, type = "pie",
textinfo = "label+percent", text = nombres_porcentajes, marker = list(colors = colores))
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
valores=c(23,97)
porcentajes <- (valores / sum(valores)) * 100
plot_ly(labels = "", values = porcentajes, type = "pie",
textinfo = "label+percent", text = nombres_porcentajes, marker = list(colors = colores))
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
valores=c(23,97)
porcentajes <- (valores / sum(valores)) * 100
plot_ly(labels = "holA", values = porcentajes, type = "pie",
textinfo = "label+percent", text = nombres_porcentajes, marker = list(colors = colores))
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
valores=c(23,97)
nombres_porcentajes=c("Hombre","Mujer")
porcentajes <- (valores / sum(valores)) * 100
plot_ly(labels = datosproblema$Var1, values = porcentajes, type = "pie",
textinfo = "label+percent", text = nombres_porcentajes, marker = list(colors = colores)) %>%
layout(title = list(font="Porcentajes de Estado del credito"),
showlegend = FALSE,  # Ocultar la leyenda
margin = list(l = 20, r = 0, b = 0, t = 30),  # Ajustar márgenes
paper_bgcolor = "white",  # Fondo blanco
plot_bgcolor = "white",  # Fondo blanco
font = list(family = "Arial", size = 14),  # Fuente y tamaño de texto
titlefont = list(size = 18),  # Tamaño del título
annotations = list(text = "Fuente: Datos de ejemplo", showarrow = FALSE,
x = 0.8, y = -0.15))  # Nota de fuente
library(plotly)
#primero leemos el excel y lo guardamos en un data frame en este caso :
Blackfriday=data.frame(read_xlsx("C:/Users/alejo/Downloads/Blackfriday.xlsx"))
#Despues establecemos el tamaño de la muestra y con ese tamaño usamos la funcion sample :
n=120
muestra=sample(1:nrow(Blackfriday),size=n,replace=FALSE)
#Finalmente relacionamos nuestra muestra con los datos obtenidos del excel:
datosfinales = Blackfriday[muestra, ]
datosfinales
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
valores= c(23,97)
nombres_porcentajes=c("Hombre","Mujer")
porcentajes <- (valores / sum(valores)) * 100
plot_ly(labels = datosproblema$Var1, values = porcentajes, type = "pie",
textinfo = "label+percent", text = nombres_porcentajes, marker = list(colors = colores)) %>%
layout(title = list(font="Porcentajes de Estado del credito"),
showlegend = FALSE,  # Ocultar la leyenda
margin = list(l = 20, r = 0, b = 0, t = 30),  # Ajustar márgenes
paper_bgcolor = "white",  # Fondo blanco
plot_bgcolor = "white",  # Fondo blanco
font = list(family = "Arial", size = 14),  # Fuente y tamaño de texto
titlefont = list(size = 18),  # Tamaño del título
annotations = list(text = "Fuente: Datos de ejemplo", showarrow = FALSE,
x = 0.8, y = -0.15))  # Nota de fuente
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
valores= c(23,97)
nombres_porcentajes=c("Hombre","Mujer")
porcentajes <- (valores / sum(valores)) * 100
colores <- c("#3498db", "#e74c3c")
plot_ly(labels = datosproblema$Var1, values = porcentajes, type = "pie",
textinfo = "label+percent", text = nombres_porcentajes, marker = list(colors = colores)) %>%
layout(title = list(font="Porcentajes de Estado del credito"),
showlegend = FALSE,  # Ocultar la leyenda
margin = list(l = 20, r = 0, b = 0, t = 30),  # Ajustar márgenes
paper_bgcolor = "white",  # Fondo blanco
plot_bgcolor = "white",  # Fondo blanco
font = list(family = "Arial", size = 14),  # Fuente y tamaño de texto
titlefont = list(size = 18),  # Tamaño del título
annotations = list(text = "Fuente: Datos de ejemplo", showarrow = FALSE,
x = 0.8, y = -0.15))  # Nota de fuente
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
valores= c(94,26)
nombres_porcentajes=c("Hombre","Mujer")
porcentajes <- (valores / sum(valores)) * 100
colores <- c("#3498db", "#e74c3c")
plot_ly(labels = datosproblema$Var1, values = porcentajes, type = "pie",
textinfo = "label+percent", text = nombres_porcentajes, marker = list(colors = colores)) %>%
layout(title = list(font="Porcentajes de Estado del credito"),
showlegend = FALSE,  # Ocultar la leyenda
margin = list(l = 20, r = 0, b = 0, t = 30),  # Ajustar márgenes
paper_bgcolor = "white",  # Fondo blanco
plot_bgcolor = "white",  # Fondo blanco
font = list(family = "Arial", size = 14),  # Fuente y tamaño de texto
titlefont = list(size = 18),  # Tamaño del título
annotations = list(text = "Fuente: Datos de ejemplo", showarrow = FALSE,
x = 0.8, y = -0.15))  # Nota de fuente
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
valores= c(94,26)
nombres_porcentajes=c("Hombre","Mujer")
porcentajes <- (valores / sum(valores)) * 100
colores <- c("#3498db", "#e74c3c")
plot_ly(labels = datosproblema$Var1, values = porcentajes, type = "pie",
textinfo = "label+percent", text = datosproblema$Var1 , marker = list(colors = colores)) %>%
layout(title = list(font="Porcentajes de Estado del credito"),
showlegend = FALSE,  # Ocultar la leyenda
margin = list(l = 20, r = 0, b = 0, t = 30),  # Ajustar márgenes
paper_bgcolor = "white",  # Fondo blanco
plot_bgcolor = "white",  # Fondo blanco
font = list(family = "Arial", size = 14),  # Fuente y tamaño de texto
titlefont = list(size = 18),  # Tamaño del título
annotations = list(text = "Fuente: Datos de ejemplo", showarrow = FALSE,
x = 0.8, y = -0.15))  # Nota de fuente
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
valores= datosproblema$Freq
nombres_porcentajes=c("Hombre","Mujer")
porcentajes <- (valores / sum(valores)) * 100
colores <- c("#3498db", "#e74c3c")
plot_ly(labels = datosproblema$Var1, values = porcentajes, type = "pie",
textinfo = "label+percent", text = datosproblema$Var1 , marker = list(colors = colores)) %>%
layout(title = list(font="Porcentajes de Estado del credito"),
showlegend = FALSE,  # Ocultar la leyenda
margin = list(l = 20, r = 0, b = 0, t = 30),  # Ajustar márgenes
paper_bgcolor = "white",  # Fondo blanco
plot_bgcolor = "white",  # Fondo blanco
font = list(family = "Arial", size = 14),  # Fuente y tamaño de texto
titlefont = list(size = 18),  # Tamaño del título
annotations = list(text = "Fuente: Datos de ejemplo", showarrow = FALSE,
x = 0.8, y = -0.15))  # Nota de fuente
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
valores= datosproblema$Freq
nombres_porcentajes=c("Hombre","Mujer")
porcentajes <- (valores / sum(valores)) * 100
colores <- c("#3498db", "#e74c3c")
plot_ly(labels = nombres_porcentajes, values = porcentajes, type = "pie",
textinfo = "label+percent", text = datosproblema$Var1 , marker = list(colors = colores)) %>%
layout(title = list(font="Porcentajes de Estado del credito"),
showlegend = FALSE,  # Ocultar la leyenda
margin = list(l = 20, r = 0, b = 0, t = 30),  # Ajustar márgenes
paper_bgcolor = "white",  # Fondo blanco
plot_bgcolor = "white",  # Fondo blanco
font = list(family = "Arial", size = 14),  # Fuente y tamaño de texto
titlefont = list(size = 18),  # Tamaño del título
annotations = list(text = "Fuente: Datos de ejemplo", showarrow = FALSE,
x = 0.8, y = -0.15))  # Nota de fuente
datosproblema=data.frame(table(datosfinales$Gender))
datosproblema
valores= datosproblema$Freq
nombres_porcentajes=c("Mujer","Hombre")
porcentajes <- (valores / sum(valores)) * 100
colores <- c("#3498db", "#e74c3c")
plot_ly(labels = nombres_porcentajes, values = porcentajes, type = "pie",
textinfo = "label+percent", text = datosproblema$Var1 , marker = list(colors = colores)) %>%
layout(title = list(font="Porcentajes de Estado del credito"),
showlegend = FALSE,  # Ocultar la leyenda
margin = list(l = 20, r = 0, b = 0, t = 30),  # Ajustar márgenes
paper_bgcolor = "white",  # Fondo blanco
plot_bgcolor = "white",  # Fondo blanco
font = list(family = "Arial", size = 14),  # Fuente y tamaño de texto
titlefont = list(size = 18),  # Tamaño del título
annotations = list(text = "Fuente: Datos de ejemplo", showarrow = FALSE,
x = 0.8, y = -0.15))  # Nota de fuente
#primero leemos el excel y lo guardamos en un data frame en este caso :
Blackfriday=data.frame(read_xlsx("C:/Users/alejo/Desktop/Blackfriday.xlsx"))
var.test(c(sdcompraspromM,sdcompraspromF))
z3B <- ((PromMMuestra-PromMuestraF))/(sqrt(((sdPromMuestraM*sdPromMuestraM)/120)+((sdPromMuestraF*sdPromMuestraF)/120)))
muestraP3 <- subset(Blackfriday,select=c(Gender,Purchase))
#tamaño de la muestrs 120
n=120
#se extraen los datos de la población femenina
PoblacionF <- subset(muestraP3,Gender=="F")
muestraF <- sample(PoblacionF$Purchase,size=n,replace=FALSE,prob=NULL)
comprasPromF <- mean(PoblacionF$Purchase)
PromMuestraF <- mean(muestraF)
sdcompraspromF <- sd(PoblacionF$Purchase)
sdPromMuestraF <- sd(muestraF)
#se extraen los datos de la población masculina
PoblacionM <- subset(muestraP3,Gender=="M")
muestraM <- sample(PoblacionM$Purchase,size=n,replace=FALSE,prob=NULL)
ComprasPromM <- mean(PoblacionM$Purchase)
PromMMuestra <- mean(muestraM)
sdcompraspromM <- sd(PoblacionM$Purchase)
sdPromMuestraM <- sd(muestraM)
cat("La muestra femenina es:",muestraF)
#cat("La población femenina es:",PoblacionF$Purchase)
cat("\nEl promedio de la población femenina es:",comprasPromF)
cat("\nEl promedio de la muestra femenina es:",PromMuestraF)
cat("\nLa desviación estandar de la población femenina es:",sdcompraspromF)
cat("\nLa desviación estandar de la muestra femenina es:",sdPromMuestraF)
cat("La muestra masculina es:",muestraM)
#cat("La población femenina es:",PoblacionF$Purchase)
cat("\nEl promedio de la población masculina es:",ComprasPromM)
cat("\nEl promedio de la muestra masculina es:",PromMMuestra)
cat("\nLa desviación estandar de la población masculina es:",sdcompraspromM)
cat("\nLa desviación estandar de la muestra masculina es:",sdPromMuestraM)
z3B <- ((PromMMuestra-PromMuestraF))/(sqrt(((sdPromMuestraM*sdPromMuestraM)/120)+((sdPromMuestraF*sdPromMuestraF)/120)))
z3B
pnorm(z3B)
var.test(c(sdcompraspromM,sdcompraspromF))
if (!require('devtools')) install.packages('devtools')
devtools::install_github('fhernanb/stests', force=TRUE)
var.test(c(sdcompraspromM,sdcompraspromF))
install.packages("devtools")
install.packages("devtools")
set.seed(27811)
library(dplyr,warn.conflicts = FALSE)
library(modeest,warn.conflicts = FALSE)
library(descr, warn.conflicts = FALSE)
library(ggplot2, warn.conflicts = FALSE)
library(kableExtra, warn.conflicts = FALSE)
library(moments, warn.conflicts =  FALSE)
library(plotrix, warn.conflicts =  FALSE)
library(readxl, warn.conflicts =  FALSE)
library(plotly, warn.conflicts = FALSE)
library(tseries, warn.conflicts = FALSE)
library(cowplot, warn.conflicts = FALSE)
library(devtools, warn.conflicts = FALSE)
if (!require('devtools')) install.packages('devtools')
devtools::install_github('fhernanb/stests', force=TRUE)
var.test(c(sdcompraspromM,sdcompraspromF))
var.test(c(sdcompraspromM,sdcompraspromF))
if (!require('devtools')) install.packages('devtools')
devtools::install_github('fhernanb/stests', force=TRUE)
